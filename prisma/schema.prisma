generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  password   String
  firstName  String
  lastName   String
  profileImg String?
  birthDate  DateTime
  chats      ChatUser[]
  message    Message[]
}

model Chat {
  id         Int        @id @default(autoincrement())
  name       String
  chatTypeId Int
  chatType   ChatType   @relation(fields: [chatTypeId], references: [id], onDelete: Cascade)
  chatUser   ChatUser[]
  messages   Message[]
}

model ChatType {
  id    Int    @id @default(autoincrement())
  name  String @unique
  chats Chat[]
}

model ChatUser {
  id     Int @id @default(autoincrement())
  chatId Int
  userId Int

  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([chatId, userId])
}

model Message {
  id          Int         @id @default(autoincrement())
  messageType MessageType

  message String

  audioUrl    String?
  videoUrl    String?
  imageUrl    String?
  documentUrl String?
  fileName    String?
  fileSize    Int?

  chatId    Int
  createdAt DateTime @default(now())
  senderId  Int
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  sender    User     @relation(fields: [senderId], references: [id], onDelete: Cascade)
}

enum MessageType {
  text
  audio
  video
  img
  document
}
